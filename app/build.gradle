//apply plugin: 'com.android.application'
//apply plugin: 'com.palantir.git-version'
import com.android.build.OutputFile

plugins {
    id 'com.android.application'
    id 'com.palantir.git-version'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.30'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'kotlin-parcelize'
}

//TODO:need version only for release, literal for debug.
ext {
    git = gitVersion()
    gitSplit = git.tokenize('.')
    gitVersionCode = gitSplit.get(2).tokenize('-').get(0).toInteger()
    gitVersionName = "${gitSplit.get(0)}.${gitSplit.get(1)}"
}
def userHome = System.getProperty('user.home')
def keyStore = new Properties()
def baseFileName = "CertifySnap"
keyStore.load(new FileInputStream("$userHome/certifysnap/keystore.properties"))
android {
    useLibrary 'org.apache.http.legacy'

    signingConfigs {
        Snap {
            storeFile new File("$userHome/certifysnap/CertifySnap.jks")
            storePassword = keyStore['snap.passwd']
            keyAlias = 'certifysnap'
            keyPassword = keyStore['snap.passwd']
        }
        SnapEnt {
            storeFile file("$userHome/certifysnap/CertifySnapEnt.jks")
            storePassword = keyStore['snapEnt.passwd']
            keyAlias = 'snapent'
            keyPassword = keyStore['snapEnt.passwd']
        }
    }
    defaultConfig {
        applicationId "com.certify.snap"
        minSdkVersion 25
        targetSdkVersion 31
        compileSdkVersion 31
        versionCode = gitVersionCode
        versionName = gitVersionName
        versionNameSuffix ""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        testOptions.unitTests.includeAndroidResources = true
        ndk {
            abiFilters 'arm64-v8a'
        }
        buildConfigField "String", "CONFIG_FILE_NAME", "\"verifier-context.jsonc\""
    }
    flavorDimensions "version"
    productFlavors {
        Snap {
            dimension = 'version'
            signingConfig signingConfigs.Snap
        }
        SnapEnt {
            dimension = 'version'
            applicationIdSuffix ".ent"
            signingConfig signingConfigs.SnapEnt
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "ENDPOINT_URL", "\"https://api.certify.me\""
        }
        qa {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "ENDPOINT_URL", "\"https://apiqa.certify.me\""
            testCoverageEnabled = true
        }
        debug {
            minifyEnabled false
            buildConfigField "String", "ENDPOINT_URL", "\"https://apidev.certify.me\""
        }
    }
    testOptions {
        unitTests.all {
            systemProperty 'robolectric.enabledSdks', '25'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {        viewBinding = true    }
    packagingOptions {
        pickFirst 'META-INF/ASL-2.0.txt'
        pickFirst 'draftv4/schema'
        pickFirst 'draftv3/schema'
        pickFirst 'META-INF/LGPL-3.0.txt'
    }
}
android.applicationVariants.all { variant ->
    def buildType = variant.buildType.buildType.name
    variant.outputs.all { output ->

        //def suffix = output.apkData.fullName == "snapEntRelease" ? "-ent" : ""
        def suffix = ""
        version = buildType == "release" ? "${versionName}.${output.versionCode}" : "${'git rev-parse --short HEAD'.execute().text.replace('\n', '')}";
        output.outputFileName = "$baseFileName$suffix-${buildType}-${version}.apk"
    }
}
def room_version="2.2.5"
dependencies {

    implementation project(':decoder')
    implementation project(':engine')

    implementation fileTree(include: ['*.jar','*.aar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation files('libs\\http-2.2.1.jar')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.tamic.novate:novate:1.5.5'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.16'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "com.journeyapps:zxing-android-embedded:4.3.0"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.google.guava:guava:27.0.1-android'

    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    //  api project(path: ':myokhttp')
    implementation files('libs/bcpissuelibrary.jar')
    //implementation files('libs/core-3.1.0.jar')
    implementation files('libs/telpo_api.jar')
    implementation files('libs/util.jar')
    implementation files('libs/arcsoft_image_util.jar')
    implementation files('libs/arcsoft_face.jar')
    implementation files('libs/pushservice-6.5.0.75.jar')
    implementation files('libs/telpo_temperature_v1.1.6.jar')
    implementation files('libs/brother_print_library.aar')
    implementation files('libs/PosUtil.jar')
//    implementation files('libs/poi-3.12-android-a.jar')
//    implementation files('libs/poi-ooxml-schemas-3.12-20150511-a.jar')
    def appCenterSdkVersion = '3.2.1'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"
    implementation 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'

    implementation 'com.google.mlkit:barcode-scanning:16.0.0'
    implementation 'com.google.firebase:firebase-iid:20.2.0'
    implementation 'com.google.firebase:firebase-messaging:20.2.0'

    implementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    implementation 'me.grantland:autofittextview:0.2.1'
    implementation 'com.github.skydoves:elasticviews:1.0.6'
    implementation 'com.squareup:otto:1.3.7'
    annotationProcessor 'com.jakewharton:butterknife:7.0.1'
    implementation 'com.jakewharton:butterknife:7.0.1'
    implementation 'org.apache.httpcomponents.core5:httpcore5:5.0.1'

    testImplementation 'commons-logging:commons-logging:1.2'
    testImplementation "org.mockito:mockito-core:3.3.3"
    androidTestImplementation "org.mockito:mockito-core:3.3.3"
    testImplementation "org.robolectric:robolectric:4.3.1"
    api "net.zetetic:android-database-sqlcipher:4.4.0@aar"
    api "androidx.sqlite:sqlite:2.1.0"
    //implementation 'android.arch.persistence.room:runtime:1.1.1'
    //annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'
    implementation "androidx.room:room-runtime:2.3.0"
    annotationProcessor "androidx.room:room-compiler:2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    implementation 'io.reactivex.rxjava2:rxjava:2.2.9'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation Deps.kotlin_stdlib
    implementation Deps.androidx_core
    implementation Deps.androidx_appcompat
    implementation Deps.androidx_material
    implementation Deps.androidx_constraint
    implementation Deps.androidx_navigation_fragment
    implementation Deps.androidx_navigation_ui
    implementation Deps.androidx_fragment_ktx
    implementation Deps.androidx_lifecycle_livedata_ktx
    implementation Deps.room_runtime
    implementation Deps.room_ktx
    implementation Deps.androidx_worker_ktx
    implementation Deps.kotlinx_coroutines
    implementation(Deps.zxing) { transitive = false }
    implementation Deps.zxing_core
    implementation Deps.guava_conflict_resolver
    implementation Deps.retrofit2
    implementation Deps.log_interceptor
    implementation Deps.gson_converter
    implementation Deps.jackson_kotlin

    implementation Deps.timber

    implementation Deps.google_licenses

    implementation Deps.kotlin_stdlib

    implementation Deps.hilt
    kapt Deps.hilt_compiler
    implementation Deps.hilt_viewmodel
    implementation Deps.hilt_work
    kapt Deps.androidx_hilt_compiler
    kapt Deps.room_compiler

    coreLibraryDesugaring Deps.android_tools_desugar_jdk_libs

}
apply plugin: 'com.google.gms.google-services'

